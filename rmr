#!/bin/bash

# Last modified:Mon Mar 13 01:51:51 PM EDT 2023
# version 1.1.1

bold=$(tput bold)
normal=$(tput sgr0)
scriptname=$(realpath "$0")

function editscript(){ if [ "$1" = "edit" ] || [ "$1" = "nano" ]; then /usr/bin/nano "$scriptname"; exit; fi; }

editscript "$1"


if [[ -d "$1" ]]
 then
   if ! ( shopt -s dotglob failglob; : ./* ) 2>/dev/null          ## 2023.03.13: https://mywiki.wooledge.org/BashFAQ/004
    then
	printf "%s" "$bold"
	rmdir "$1"
	printf "Removing %s... \n\n$ ls %s/ \n\n" "$1" "$1"
	if [ ! -e "$1" ]; then printf "\nDone!\n"; else printf "\n%s is still present check ownership and permissions:\n" "$1"; ls -glad --color=always "$1" ; fi
   else
	printf "%s\n" "$bold"
	find "$1"
	printf "\n"
	rm -rI "$1"
	printf "%s" "$normal"
	if [ ! -e "$1" ]; then printf "\nDone!\n"; else printf "\n%s is still present check ownership and permissions:\n" "$1"; ls -glad --color=always "$1" ; fi
   fi

#if [[ -d "$1" ]]
# then
#   if [ ! -e "$1"/* ]
#    then
#	printf "%s" "$bold"
#	rmdir "$1"
#	printf "Removing %s... \n\n$ ls %s/ \n\n" "$1" "$1"
##	ls -alF "$1"
#	if [ ! -e "$1" ]; then printf "\nDone!\n"; else printf "\n"$1" is still present check ownership and permissions:\n"; ls -glad --color=always "$1" ; fi
#   else
#	printf "%s\n" "$bold"
#	find "$1"
#	printf "\n"
#	rm -rI "$1"
#	printf "%s" "$normal"
#	if [ ! -e "$1" ]; then printf "\nDone!\n"; else printf "\n"$1" is still present check ownership and permissions:\n"; ls -glad --color=always "$1" ; fi
#   fi


elif [[ -f "$1" ]]
 then
	printf "%s\n%s is a file:\n" "$bold" "$1"
	ls -ltr "$1"
	printf '\nrmr: remove this file? (y/n) '
	printf "%s" "$normal"
	old_stty_cfg=$(stty -g)						# https://stackoverflow.com/questions/226703/how-do-i-prompt-for-yes-no-cancel-input-in-a-linux-shell-script
	stty raw -echo ; answer=$(head -c 1) ; stty "$old_stty_cfg" 	# Careful playing with stty
	if [ "$answer" != "${answer#[Yy]}" ];then
    		rm "$1"; printf "\n\n"; if [ ! -e "$1" ]; then printf "\nDone! File \"%s\" removed.\n\n" "$1"; else printf "\n\n%s%s not removed, check permissions:\n\n" "$bold" "$1"; ls -ltr "$1"; fi
	else
    		printf "\n\n%s \n" "$(ls -ltr %s)" "$1";
	fi


#	echo "Do you wish to delete the file?"
#	select yn in "Yes" "No"; do
#		case $yn in
#    			Yes ) rm "$1"; break;;
#			No ) exit;;
#		esac
#	done

fi

